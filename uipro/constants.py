import torch
CONTROLLER_HEART_BEAT_EXPIRATION = 30
WORKER_HEART_BEAT_INTERVAL = 15

LOGDIR = "."

# Model Constants
IGNORE_INDEX = -100
IMAGE_TOKEN_INDEX = -200
DEFAULT_IMAGE_TOKEN = "<image>"
DEFAULT_IMAGE_PATCH_TOKEN = "<im_patch>"
DEFAULT_IM_START_TOKEN = "<im_start>"
DEFAULT_IM_END_TOKEN = "<im_end>"
IMAGE_PLACEHOLDER = "<image-placeholder>"

GEMMA_PATCH_POS = {'11': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235274, 235298, 1279, 235274, 235313]),
 '12': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235274, 235298, 1279, 235284, 235313]), # '<crop_img_row1_col2>'
 '13': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235274, 235298, 1279, 235304, 235313]),
 '14': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235274, 235298, 1279, 235310, 235313]),
 '15': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235274, 235298, 1279, 235308, 235313]),
 '16': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235274, 235298, 1279, 235318, 235313]),
 '17': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235274, 235298, 1279, 235324, 235313]),
 '18': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235274, 235298, 1279, 235321, 235313]),
 '21': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235284, 235298, 1279, 235274, 235313]),
 '22': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235284, 235298, 1279, 235284, 235313]),
 '23': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235284, 235298, 1279, 235304, 235313]),
 '24': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235284, 235298, 1279, 235310, 235313]),
 '25': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235284, 235298, 1279, 235308, 235313]),
 '26': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235284, 235298, 1279, 235318, 235313]),
 '27': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235284, 235298, 1279, 235324, 235313]),
 '28': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235284, 235298, 1279, 235321, 235313]),
 '31': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235304, 235298, 1279, 235274, 235313]),
 '32': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235304, 235298, 1279, 235284, 235313]),
 '33': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235304, 235298, 1279, 235304, 235313]),
 '34': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235304, 235298, 1279, 235310, 235313]),
 '35': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235304, 235298, 1279, 235308, 235313]),
 '36': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235304, 235298, 1279, 235318, 235313]),
 '37': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235304, 235298, 1279, 235324, 235313]),
 '38': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235304, 235298, 1279, 235321, 235313]),
 '41': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235310, 235298, 1279, 235274, 235313]),
 '42': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235310, 235298, 1279, 235284, 235313]),
 '43': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235310, 235298, 1279, 235304, 235313]),
 '44': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235310, 235298, 1279, 235310, 235313]),
 '45': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235310, 235298, 1279, 235308, 235313]),
 '46': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235310, 235298, 1279, 235318, 235313]),
 '47': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235310, 235298, 1279, 235324, 235313]),
 '48': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235310, 235298, 1279, 235321, 235313]),
 '51': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235308, 235298, 1279, 235274, 235313]),
 '52': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235308, 235298, 1279, 235284, 235313]),
 '53': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235308, 235298, 1279, 235304, 235313]),
 '54': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235308, 235298, 1279, 235310, 235313]),
 '55': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235308, 235298, 1279, 235308, 235313]),
 '56': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235308, 235298, 1279, 235318, 235313]),
 '57': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235308, 235298, 1279, 235324, 235313]),
 '58': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235308, 235298, 1279, 235321, 235313]),
 '61': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235318, 235298, 1279, 235274, 235313]),
 '62': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235318, 235298, 1279, 235284, 235313]),
 '63': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235318, 235298, 1279, 235304, 235313]),
 '64': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235318, 235298, 1279, 235310, 235313]),
 '65': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235318, 235298, 1279, 235308, 235313]),
 '66': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235318, 235298, 1279, 235318, 235313]),
 '67': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235318, 235298, 1279, 235324, 235313]),
 '68': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235318, 235298, 1279, 235321, 235313]),
 '71': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235324, 235298, 1279, 235274, 235313]),
 '72': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235324, 235298, 1279, 235284, 235313]),
 '73': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235324, 235298, 1279, 235304, 235313]),
 '74': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235324, 235298, 1279, 235310, 235313]),
 '75': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235324, 235298, 1279, 235308, 235313]),
 '76': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235324, 235298, 1279, 235318, 235313]),
 '77': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235324, 235298, 1279, 235324, 235313]),
 '78': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235324, 235298, 1279, 235321, 235313]),
 '81': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235321, 235298, 1279, 235274, 235313]),
 '82': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235321, 235298, 1279, 235284, 235313]),
 '83': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235321, 235298, 1279, 235304, 235313]),
 '84': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235321, 235298, 1279, 235310, 235313]),
 '85': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235321, 235298, 1279, 235308, 235313]),
 '86': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235321, 235298, 1279, 235318, 235313]),
 '87': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235321, 235298, 1279, 235324, 235313]),
 '88': torch.tensor([235322, 32423, 235298, 3030, 235298, 874, 235321, 235298, 1279, 235321, 235313])}
